{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","addPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9dac31f3.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`\n}\n\nexport default formatDate;\n","const formatType = (type: string): string => {\n  let color: string;\n\n  switch (type) {\n    case 'Feu':\n      color = 'red lighten-1';\n      break;\n    case 'Eau':\n      color = 'blue lighten-1';\n      break;\n    case 'Plante':\n      color = 'green lighten-1';\n      break;\n    case 'Insecte':\n      color = 'brown lighten-1';\n      break;\n    case 'Normal':\n      color = 'grey lighten-3';\n      break;\n    case 'Vol':\n      color = 'blue lighten-3';\n      break;\n    case 'Poison':\n      color = 'deep-purple accent-1';\n      break;\n    case 'Fée':\n      color = 'pink lighten-4';\n      break;\n    case 'Psy':\n      color = 'deep-purple darken-2';\n      break;\n    case 'Electrik':\n      color = 'lime accent-1';\n      break;\n    case 'Combat':\n      color = 'deep-orange';\n      break;\n    default:\n      color = 'grey';\n      break;\n  }\n\n  return `chip ${color}`;\n}\n\nexport default formatType\n","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date'\nimport formatType from '../helpers/format-type'\nimport { useHistory } from 'react-router-dom'\n\ntype Props = {\n  pokemon: Pokemon\n  borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({ pokemon, borderColor = '#009688' }) => {\n\n  const [color, setColor] = useState<string>();\n  const history = useHistory()\n\n  const showBorder = () => {\n    setColor(borderColor);\n  }\n\n  const hideBorder = () => {\n    setColor('#f5f5f5');\n  }\n\n  const goToPokemon = (id: number) => {\n    history.push(`/pokemons/${id}`)\n  }\n  return (\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name} />\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonCard;\n","import Pokemon from './pokemon';\n\nexport const POKEMONS: Pokemon[] = [\n  {\n    id: 1,\n    name: \"Bulbizarre\",\n    hp: 25,\n    cp: 5,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n    types: [\"Plante\", \"Poison\"],\n    created: new Date()\n  },\n  {\n    id: 2,\n    name: \"Salamèche\",\n    hp: 28,\n    cp: 6,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n    types: [\"Feu\"],\n    created: new Date()\n  },\n  {\n    id: 3,\n    name: \"Carapuce\",\n    hp: 21,\n    cp: 4,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n    types: [\"Eau\"],\n    created: new Date()\n  },\n  {\n    id: 4,\n    name: \"Aspicot\",\n    hp: 16,\n    cp: 2,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n    types: [\"Insecte\", \"Poison\"],\n    created: new Date()\n  },\n  {\n    id: 5,\n    name: \"Roucool\",\n    hp: 30,\n    cp: 7,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n    types: [\"Normal\", \"Vol\"],\n    created: new Date()\n  },\n  {\n    id: 6,\n    name: \"Rattata\",\n    hp: 18,\n    cp: 6,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n    types: [\"Normal\"],\n    created: new Date()\n  },\n  {\n    id: 7,\n    name: \"Piafabec\",\n    hp: 14,\n    cp: 5,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n    types: [\"Normal\", \"Vol\"],\n    created: new Date()\n  },\n  {\n    id: 8,\n    name: \"Abo\",\n    hp: 16,\n    cp: 4,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n    types: [\"Poison\"],\n    created: new Date()\n  },\n  {\n    id: 9,\n    name: \"Pikachu\",\n    hp: 21,\n    cp: 7,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n    types: [\"Electrik\"],\n    created: new Date()\n  },\n  {\n    id: 10,\n    name: \"Sabelette\",\n    hp: 19,\n    cp: 3,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n    types: [\"Normal\"],\n    created: new Date()\n  },\n  {\n    id: 11,\n    name: \"Mélofée\",\n    hp: 25,\n    cp: 5,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n    types: [\"Fée\"],\n    created: new Date()\n  },\n  {\n    id: 12,\n    name: \"Groupix\",\n    hp: 17,\n    cp: 8,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n    types: [\"Feu\"],\n    created: new Date()\n  }\n];\n\nexport default POKEMONS;\n","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons: Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon | null> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n        .then(response => response.json())\n        .then(data => this.isEmpty(data) ? null : data)\n        .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    });\n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    });\n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    });\n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    });\n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n        .then(response => response.json())\n        .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\nconst PokemonSearch: FunctionComponent = () => {\n\n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n\n    if (term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s12 m6 offset-m3\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"input-field\">\n              <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} />\n            </div>\n            <div className='collection'>\n              {pokemons.map((pokemon) => (\n                <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n                  {pokemon.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonSearch;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom'\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n\n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons))\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <PokemonSearch/>\n          {pokemons.map(pokemon => (\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\n          ))}\n        </div>\n        <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3'\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\n        to=\"/pokemon/add\"\n        >\n          <i className=\"material-icons\">add</i>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonList;\n","import React, { FunctionComponent } from 'react';\n\nconst Loader: FunctionComponent = () => {\n\n  return (\n    <div className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div><div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\ntype Params = { id: string };\n\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon))\n  }, [match.params.id]);\n\n  return (\n    <div>\n      {pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\">\n            <h2 className=\"header center\">{pokemon.name}</h2>\n            <div className=\"card hoverable\">\n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className='material-icons'>edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr>\n                        <td>Nom</td>\n                        <td><strong>{pokemon.name}</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Points de vie</td>\n                        <td><strong>{pokemon.hp}</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Dégâts</td>\n                        <td><strong>{pokemon.cp}</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Types</td>\n                        <td>\n                          {pokemon.types.map(type => (\n                            <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td>\n                      </tr>\n                      <tr>\n                        <td>Date de création</td>\n                        <td>{formatDate(pokemon.created)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonsDetail;\n","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound: FunctionComponent = () => {\n\n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\" />\n      <h1>Hey, cette page n'existe pas !</h1>\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n}\n\ntype Form ={\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true},\n    hp: { value: pokemon.hp, isValid: true},\n    cp: { value: pokemon.cp, isValid: true},\n    types: { value: pokemon.types, isValid: true}\n  })\n\n  const history = useHistory()\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type)\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = {[fieldName]: { value: fieldValue }};\n\n    setForm({...form, ...newField})\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked\n    let newField: Field\n\n    if(checked) {\n      const newTypes: string[] = form.types.value.concat([type])\n      newField = { value: newTypes }\n    } else {\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type)\n      newField = { value: newTypes }\n    }\n\n    setForm({...form, ...{ types: newField }})\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const isFormValid = validateForm()\n\n    if(isFormValid) {\n      pokemon.picture = form.picture.value\n      pokemon.name = form.name.value\n      pokemon.hp = form.hp.value\n      pokemon.cp = form.cp.value\n      pokemon.types = form.types.value\n\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  }\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'))\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`))\n  }\n\n  const isAddForm = () => {\n    return !isEditForm\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form\n\n    // Validator picture\n    if(isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\"\n      const end = \".png\"\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide.\"\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false}\n        newForm = { ...form, ...{ picture: newField } }\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true }\n        newForm = { ...form, ...{ picture: newField } }\n      }\n    }\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).'\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false}\n      newForm = { ...newForm, ...{ name: newField } }\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ name: newField } }\n    }\n\n    // Validator hp\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.'\n      const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ hp: newField } }\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ hp: newField } }\n    }\n\n    // Validator cp\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégats du pokémon sont compris entre 0 et 99.'\n      const newField: Field = { value: form.cp.value, error: errorMsg, isValid: false }\n      newForm = { ...newForm, ...{ cp: newField } }\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true }\n      newForm = { ...newForm, ...{ cp: newField } }\n    }\n\n    setForm(newForm)\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid\n  }\n\n  const isTypesValid = (type: string): boolean => {\n\n    if(form.types.value.length === 1 && hasType(type)) {\n      return false\n    }\n\n    if(form.types.value.length >= 3 && !hasType(type)) {\n      return false\n    }\n\n    return true\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemon`))\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\n              <span className='btn-floating halfway-fab waves-effect wave-light'>\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {form.picture.error &&\n                    <div className='card-panel red accent-1'>{form.picture.error}</div>\n                  }\n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {form.name.error &&\n                  <div className='card-panel red accent-1'>{form.name.error}</div>\n                  }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error &&\n                    <div className='card-panel red accent-1'>{form.hp.error}</div>\n                  }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error &&\n                    <div className='card-panel red accent-1'>{form.cp.error}</div>\n                  }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{ marginBottom: '10px' }}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{type}</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PokemonForm;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Loader from '../components/loader';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n\ntype Params = { id: string };\n\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n\n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon))\n  }, [match.params.id]);\n\n  return (\n    <div>\n      {pokemon ? (\n        <div className=\"row\">\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\n          <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonEdit;\n","export default class Pokemon {\n  // 1. Typage des propiétés d'un pokémon.\n  id: number;\n  hp: number;\n  cp: number;\n  name: string;\n  picture: string;\n  types: Array<string>;\n  created: Date;\n\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n  constructor(\n    id: number,\n    hp: number = 100,\n    cp: number = 10,\n    name: string = '...',\n    picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n    types: Array<string> = ['Normal'],\n    created: Date = new Date()\n  ) {\n    // 3. Initialisation des propiétés d'un pokémons.\n    this.id = id;\n    this.hp = hp;\n    this.cp = cp;\n    this.name = name;\n    this.picture = picture;\n    this.types = types;\n    this.created = created;\n  }\n}\n","import React, { FunctionComponent, useState } from 'react'\nimport PokemonForm from '../components/pokemon-form'\nimport Pokemon from '../models/pokemon'\n\nconst PokemonAdd: FunctionComponent = () => {\n  const [id] = useState<number>(new Date().getTime())\n  const [pokemon] = useState<Pokemon>(new Pokemon(id))\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"header center\">Ajouter un pokémon</h2>\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n    </div>\n  )\n}\n\nexport default PokemonAdd\n","export default class AuthenticationService {\n  static isAuthenticated: boolean = false\n\n  static login(username: string, password: string): Promise<boolean> {\n    const isAuthenticated = (username === \"pikachu\" && password === 'pikachu')\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.isAuthenticated = isAuthenticated\n        resolve(isAuthenticated)\n      }, 1000)\n    })\n  }\n}\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField });\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if (form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if (form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = { value: form.password.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if (isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if (!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n\n        history.push('/pokemons');\n\n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                    <div className=\"card-panel red accent-1\">\n                      {form.username.error}\n                    </div>}\n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                    <div className=\"card-panel red accent-1\">\n                      {form.password.error}\n                    </div>}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {\n      return <Redirect to={{ pathname: '/login' }} />\n    }\n\n    return <Component {...props} />\n  }} />\n);\n\nexport default PrivateRoute\n","import React, { FunctionComponent} from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PokemonsDetail from './pages/pokemon-detail';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login'\nimport PrivateRoute from './PrivateRoute'\n\nconst App: FunctionComponent = () => {\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className='nav-wrapper teal'>\n            <Link to=\"/\" className='brand-logo center'>Pokédex</Link>\n          </div>\n        </nav>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PokemonList}></PrivateRoute>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList}></PrivateRoute>\n          <PrivateRoute exact path='/pokemon/add' component={PokemonAdd}></PrivateRoute>\n          <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit}></PrivateRoute>\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail}></PrivateRoute>\n          <Route component={PageNotFound}/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}